<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="dbHospital.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2016"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Consulta" custom_title="0" dock_id="1" table="4,8:mainConsulta"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000011800ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS Paciente (
    id_paciente INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    data_nascimento TEXT NOT NULL,
    genero TEXT,
    contato TEXT
);

CREATE TABLE IF NOT EXISTS Medico (
    id_medico INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    especialidade TEXT,
    contato TEXT -- ESTA COLUNA É OBRIGATÓRIA para o Python funcionar!
);

CREATE TABLE IF NOT EXISTS Enfermeiro (
    id_enfermeiro INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    contato TEXT
);

CREATE TABLE IF NOT EXISTS Consulta (
    id_consulta INTEGER PRIMARY KEY AUTOINCREMENT,
    id_paciente INTEGER NOT NULL,
    id_medico INTEGER NOT NULL,
    data_consulta TEXT NOT NULL,
    status TEXT,
    FOREIGN KEY(id_paciente) REFERENCES Paciente(id_paciente),
    FOREIGN KEY(id_medico) REFERENCES Medico(id_medico)
);

CREATE TABLE IF NOT EXISTS Tratamento (
    id_tratamento INTEGER PRIMARY KEY AUTOINCREMENT,
    id_paciente INTEGER NOT NULL,
    descricao TEXT CHECK (LENGTH(descricao) &lt;= 1024),
    data_tratamento TEXT NOT NULL,
    FOREIGN KEY(id_paciente) REFERENCES Paciente(id_paciente)
);

CREATE TABLE IF NOT EXISTS Prescricao (
    id_prescricao INTEGER PRIMARY KEY AUTOINCREMENT,
    id_paciente INTEGER NOT NULL,
    id_medico INTEGER NOT NULL,
    nome_medicamento TEXT NOT NULL,
    data_prescricao TEXT NOT NULL,
    FOREIGN KEY(id_paciente) REFERENCES Paciente(id_paciente),
    FOREIGN KEY(id_medico) REFERENCES Medico(id_medico)
);

CREATE TABLE IF NOT EXISTS Users (
    id_user INTEGER PRIMARY KEY AUTOINCREMENT,
    login TEXT UNIQUE NOT NULL,
    senha TEXT NOT NULL,
    tipo_user TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Log_Acesso (
    id_log INTEGER PRIMARY KEY AUTOINCREMENT,
    id_user INTEGER NOT NULL,
    acao_executada TEXT NOT NULL,
    data TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status TEXT NOT NULL,
    FOREIGN KEY(id_user) REFERENCES Users(id_user)
);
</sql><current_tab id="0"/></tab_sql></sqlb_project>
